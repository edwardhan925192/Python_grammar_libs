*************************** DF ***************************
pd.read_csv('./') --> 현재경로 

df --> row단위로 첫번쨰 index부터 끝 index까지 

df[condition] --> True만 보여줌
df.loc[condition, col] --> True만 보여줌 
df.loc[[row_indexes],[col_names]]

***************************** index ************************************
df.set_index()  --> index = column 이름 
df.reset_index(drop = True)

***************************** Drop ****************************************
df.drop([1,2,3,5], axis = 0)
df.drop([col_name1, col_name2], axis = 1)
df.drop(condition, col)

***************************** groupby ************************************

Series형태로 저장됨. 
Series는 index로 선택가능.

pclass  survived  sex   
1       0         female    25.666667
                  male      44.581967
        1         female    34.939024
                  male      36.248000

ex) Series[1],[0],[female] = 25.66667
df.groupby([groups])[기준].(기준에대한 사칙연산)(.sum() / .count() / .min() / .max())

******************************useful function*************************************
df.info()
df.head()
df.reset
df.dropduple
df.duple
df.astype()
df.str.replace(',' ,'')
df['col_name'].str.split(' ',expand = True)[0]
df.to_csv.(path,encoding, index)
df.apply(function, axis = 1) --> row 단위 index 0 부터 끝까지 

****************************Dealing with NAN******************************** 
df.bfill(axis = ) 
df.ffill(axis = )
df[[col_names]].isna().any(axis = ) | .all(axis = ) --> bool type pandas Series 
pd.isnull() --> bool 

**************************** Merge *****************************************
pd.merge(df_left, df_right,how = 'outer',on = 'subject_id') how = 'outer','inner','left','right' 
pd.concat([df1, df2], axis = 1)

***************************** Outlier ******************************
Q1 = df.quantile(0.25)
Q3 = df.quantile(0.75) 
IQR = Q3 - Q1
outliers = df[((df < (Q1 - 1.5 * IQR)) | (df > (Q3 + 1.5 * IQR))).any(axis=1)]


